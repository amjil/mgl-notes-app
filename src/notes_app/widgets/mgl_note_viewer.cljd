(ns notes-app.widgets.mgl-note-viewer
  (:require
   ["package:flutter/material.dart" :as m]
   [cljd.flutter :as f]
   [notes-app.widgets.mgl-richtext-viewer :as richtext-viewer]
   [notes-app.states.notes :as notes]
   [notes-app.utils.block :as block-utils]))


(defn note-view [on-reorder]
  (f/widget
   :let [note (notes/get-current-note)
         blocks (block-utils/extract-blocks-from-note note)]
   (m/ReorderableListView.builder
    ;; horizontal scroll
    .scrollDirection m/Axis.horizontal
    .itemCount (count blocks)
    .onReorder
    (fn [old-index new-index]
      ;; Call callback function to handle reordering
      (when on-reorder
        (on-reorder note old-index new-index)))
    .itemBuilder
    (fn [ctx index]
      (let [block (nth blocks index)
            key (m/ValueKey (:block-id block))]
        (m/Padding
         .key key
         .padding (m/EdgeInsets.symmetric .horizontal 8 .vertical 16)
         .child
         (richtext-viewer/richtext-viewer (:content block) {:on-link-tap nil})))))))

(defn note-viewer-dialog []
  (f/widget
   :context ctx
   :let [screen-height (* (-> m/MediaQuery (.of ctx) .-size .-height) 0.8)
         screen-width (-> m/MediaQuery (.of ctx) .-size .-width)]
   (m/Dialog
    .alignment m/Alignment.bottomCenter
    .insetPadding (m/EdgeInsets.zero)
    .child (m/Row
            .mainAxisAlignment m/MainAxisAlignment.end
            .children [(m/Container
                        .height screen-height
                        .width screen-width
                        .child (note-view block-utils/reorder-blocks))]))))

(defn show-diaglog [context]
  (m/showDialog
   .context context
   .builder (fn [_]
              (note-viewer-dialog))))
