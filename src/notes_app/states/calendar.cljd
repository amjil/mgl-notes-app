(ns notes-app.states.calendar
  (:require
   ["package:uuid/uuid.dart" :as uuid]
   [notes-app.services.db :as db]
   [notes-app.utils.state-helpers :as helpers]
   [notes-app.utils.date :as date]))

;; Calendar State Management
;; Responsible for managing daily notes count statistics for calendar visualization

;; Calendar State
(def calendar-state
  (atom
   (helpers/create-base-state
    {:note-counts {}
     :loading false
     :error nil})))

(def ^uuid/Uuid uuid-instance (uuid/Uuid.))

;; ===== Calendar State Operations =====

;; Load daily notes counts for calendar
(defn load-daily-notes-counts! [start-date end-date]
  (helpers/with-loading-state! calendar-state
    (db/get-notes-count-by-date-range start-date end-date)
    (fn [counts]
      (swap! calendar-state assoc :note-counts counts :loading false))))

;; Refresh daily notes count for a specific date
(defn refresh-daily-notes-count! [date]
  (db/refresh-daily-notes-count date))

;; Refresh daily notes counts for a date range
(defn refresh-daily-notes-counts! [start-date end-date]
  (helpers/with-loading-state! calendar-state
    (db/refresh-daily-notes-counts start-date end-date)
    (fn [_]
      (load-daily-notes-counts! start-date end-date))))

;; Get daily notes counts
(defn get-daily-notes-counts []
  (:note-counts @calendar-state))

;; Initialize daily notes counts for calendar (last 70 days)
(defn initialize-daily-notes-counts! []
  (let [end-date (date/format-date (DateTime/now))
        start-date (date/format-date (.subtract (DateTime/now) (Duration .days 70)))]
    (load-daily-notes-counts! start-date end-date)))

;; Refresh today's count when note is created/deleted
(defn refresh-today-count! []
  (refresh-daily-notes-count! (date/format-date (DateTime/now))))

;; ===== Calendar State Queries =====

;; Get calendar state
(defn get-calendar-state []
  (helpers/get-state calendar-state))

;; Check if loading
(defn is-loading? []
  (helpers/is-loading? calendar-state))

;; Get error
(defn get-error []
  (helpers/get-error calendar-state))

;; ===== Calendar State Reset =====

;; Reset calendar state
(defn reset-calendar-state! []
  (helpers/reset-state! calendar-state
    {:note-counts {}
     :loading false
     :error nil})) 