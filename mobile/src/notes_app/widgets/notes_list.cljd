(ns notes-app.widgets.notes-list
   (:require
    ["package:flutter/material.dart" :as m]
    ["package:mongol/mongol.dart" :as mgl]
    [clojure.string :as str]
    [cljd.flutter :as f]
    [notes-app.states.global :as gs]
    [notes-app.widgets.slidable :as slidable]))

 (defn list-item [i item router-fn]
   (f/widget
    :context ctx
    :get [m/Navigator]
    (m/GestureDetector
     .onTap (fn []
              (swap! gs/state assoc :note item)
              (when-not (nil? router-fn)
                (router-fn))
              nil)
     .child
     (slidable/note
      i
      item
      (m/Container
       .width 40
       .child
       (m/Column
        .mainAxisAlignment m.MainAxisAlignment/center
        .children [(m/Expanded
                    .child (m/Container
                            .padding (m.EdgeInsets/all 8)
                            .margin (m.EdgeInsets/only .bottom 8)
                            .decoration (m/BoxDecoration
                                         .borderRadius (.all m/BorderRadius (.circular m/Radius 10))
                                         .border (.all m/Border .width 0.1)
                                         .color (-> m/Theme (.of ctx) .-colorScheme .-secondaryContainer))
                            .child
                            (mgl/MongolText
                             (str (if (and (str/includes? (get item "content") "\n"))
                                    (subs (get item "content") 0 (str/index-of (get item "content") "\n"))
                                    (get item "content"))
                                  "")
                             .maxLines 1
                             .softWrap true
                             .overflow m.TextOverflow/ellipsis
                             .style (m/TextStyle
                                     .fontSize 20))))]))))))

(defn list-view [router-fn]
  (f/widget
   :context ctx
   :watch [{notes :notes} gs/state]
   (m/SingleChildScrollView
    .scrollDirection m.Axis/horizontal)
   (m/Row
    .crossAxisAlignment m.CrossAxisAlignment/start
    .children
    [(m/Padding
      .padding (m.EdgeInsets/symmetric .horizontal 10)
      .child
      (mgl/MongolText "Notes"
                      .style (m/TextStyle
                              .fontSize 20
                              .color (-> m/Theme (.of ctx) .-colorScheme .-primary)
                              .fontWeight m.FontWeight/w600)))
     (m.ListView/separated
      .scrollDirection m.Axis/horizontal
      .physics (m/NeverScrollableScrollPhysics)
      .separatorBuilder (fn [context i]
                          (m/VerticalDivider
                           .color (-> m/Theme (.of ctx) .-colorScheme .-primary)))
      .itemCount (count notes)
      .itemBuilder (fn [context i]
                     (list-item i (nth notes i) router-fn))
      .shrinkWrap true)])))