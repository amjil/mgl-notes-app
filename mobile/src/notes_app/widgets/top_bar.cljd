(ns notes-app.widgets.top-bar
  (:require 
   ["package:flutter/material.dart" :as m]
   [cljd.flutter.alpha2 :as f]
   [notes-app.screens.search :as search-screen]
   [notes-app.utils.router :as router]
   [notes-app.states.global :as gs]
   [notes-app.states.note :as note-state]))
   
(defn move-view-bars []
  (f/widget
   :context ctx
   (m/Row
    .mainAxisAlignment m.MainAxisAlignment/start
    .children
    [(m/InkWell
      .customBorder (m/CircleBorder)
      .onTap (fn []
               (-> m/Navigator (.of ctx) .pop))
      .child
      (m/Icon m.Icons/keyboard_backspace))
    ;;  (m/InkWell
    ;;   .customBorder (m/CircleBorder)
    ;;   .onTap (fn []
    ;;            (-> m/Navigator (.of ctx) .pop)
    ;;            (folder-state/move-folders 
    ;;             (get (:move-folder @gs/state) "id")
    ;;             [(get (:folder @gs/state) "id")]))
    ;;   .child
    ;;   (m/Icon m.Icons/check))
     ])))
     
(defn home [^m/TextEditingController controller]
  (f/widget
   :context ctx
   :get [m/Navigator]
   (m/SafeArea .bottom false)
   (m/Row
    .mainAxisAlignment m.MainAxisAlignment/end
    .children
    [(m/InkWell
      .customBorder (m/CircleBorder)
      .onTap (fn []
               (swap! gs/state assoc :keyboard/text-controller controller)
               (swap! gs/state assoc :floating-input true)
               (swap! gs/state assoc :keyboard/return-callback
                      (fn []
                        (swap! gs/state assoc :floating-input false)
                        (note-state/query-notes (.-text controller))))
               (swap! gs/state assoc :keyboard/return-mode :single-line)
               (router/open-editor navigator search-screen/screen)
               nil)
      .child
      (m/Icon m.Icons/search))])))