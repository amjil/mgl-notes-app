(ns notes-app.widgets.bottom-bar
  (:require
   ["package:flutter/material.dart" :as m]
   [cljd.flutter :as f]
   [notes-app.utils.bottom-sheet :as bottom-sheet]
   [notes-app.states.global :as gs]))
   

(defn sub-folder [controller router-fn]
  (f/widget
   :context ctx
   :get [m/Navigator]
   (m/Container
    .width double/infinity
    .decoration (m/BoxDecoration
                 .border (m/Border
                          .top (m/BorderSide
                                .color (-> m/Theme (.of ctx) .-colorScheme .-outlineVariant)))))
   (m/SafeArea
    .top false)
   (m/Row
    .mainAxisAlignment m.MainAxisAlignment/spaceBetween
    .children [(m/IconButton
                .padding (m.EdgeInsets/all 12)
                .constraints (m/BoxConstraints)
                .icon (m/Icon m.Icons/create_new_folder)
                .onPressed (fn []
                             (swap! gs/state assoc :keyboard/text-controller controller)
                             (bottom-sheet/modal-bottom-sheet ctx nil)))
               (m/IconButton
                .padding (m.EdgeInsets/all 12)
                .constraints (m/BoxConstraints)
                .icon (m/Icon m.Icons/edit)
                .onPressed (fn []
                             (swap! gs/state assoc :note nil)
                             (router-fn)))])))
                             

(defn home [controller]
  (f/widget
   :context ctx
   :get [m/Navigator]
   (m/Container
    .width double/infinity
    .decoration (m/BoxDecoration
                 .border (m/Border
                          .top (m/BorderSide
                                .color (-> m/Theme (.of ctx) .-colorScheme .-outlineVariant))))
    .child
    (m/SafeArea
     .top false
     .child
     (m/Row
      .mainAxisAlignment m.MainAxisAlignment/start
      .children [(m/IconButton
                  .padding (m.EdgeInsets/all 12)
                  .constraints (m/BoxConstraints)
                  .icon (m/Icon m.Icons/create_new_folder)
                  .onPressed (fn []
                               (set! (.-text controller) "")
                               (swap! gs/state assoc :keyboard/text-controller controller)
                               (bottom-sheet/modal-bottom-sheet ctx nil)))])))))