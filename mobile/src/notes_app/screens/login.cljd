(ns notes-app.screens.login
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:flutter/widgets.dart" :as widgets]
   ["package:mongol/mongol.dart" :as mgl]
   [cljd.flutter.alpha2 :as f]
   [notes-app.widgets.auth :as auth-widget]
   [notes-app.services.auth :as auth-service]
   [notes-app.utils.util :as util]))
   
(def screen
  (f/widget
   :context ctx
   :let [w (-> m/MediaQuery (.of ctx) .-size .-width)]
   :get [m/Navigator]
   :managed [email-controller (m/TextEditingController)
             password-controller (m/TextEditingController)]
   (m/Scaffold)
   .body
   (m/SafeArea)
   (m/Center)
   (m/Padding
    .padding (.all m/EdgeInsets 20))
   (m/Column
    .children
    [(auth-widget/auth-form-field email-controller "Email")
     (m/SizedBox .height 10)
     (auth-widget/auth-form-field password-controller "Password")
     (m/SizedBox .height 20)
     (m/Row
      .mainAxisAlignment m.MainAxisAlignment/spaceAround
      .children
      [(m/SizedBox .height 100
                   .width (* 0.5 w)
                   .child
                   (m/GestureDetector
                    .onTap (fn []
                             (.pushNamed navigator "/signup")
                             nil)
                    .child
                    (mgl/MongolRichText
                     .text (m/TextSpan
                            .text "Don't have an account?"
                            .style (m/TextStyle .fontSize 16)
                            .children [(m/TextSpan .text " Sign up"
                                                   .style (m/TextStyle .fontSize 16))]))))
       (auth-widget/rounded-button (fn [] (auth-service/login ctx
                                                              navigator
                                                              {"email" (.-text email-controller)
                                                               "password" (.-text password-controller)}
                                                              #(util/show-toast ctx "yessss")))
                                   "Done" nil nil)
       (auth-widget/rounded-button (fn [] (.popUntil navigator (widgets.ModalRoute/withName "/")))
                                   "Back" nil nil)])])))