(ns notes-app.main
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:flutter_dotenv/flutter_dotenv.dart" :as dotenv]
   ["package:adaptive_theme/adaptive_theme.dart" :as adaptive]
   ["package:keyboard_height_plugin/keyboard_height_plugin.dart" :as keyboard-plugin]
   [cljd.flutter.alpha2 :as f]
   [virtual-keyboard.options :as keyboard-options]
   [notes-app.screens.home :as home]
   [notes-app.screens.user :as user]
   [notes-app.screens.signup :as signup]
   [notes-app.screens.login :as login]
   [notes-app.screens.tag :as tag]
   [notes-app.services.pref :as pref]
   [notes-app.utils.themes :as themes]
   [notes-app.states.global :as gs]
   [notes-app.states.folder :as folder-state]
   [notes-app.states.tag :as tag-state]
   [notes-app.states.profile :as profile-state]))

(defn main []
  (m.WidgetsFlutterBinding/ensureInitialized)
  ;; dotenv
  (await (.load dotenv/dotenv .fileName "assets/.env"))

  ;;
  (profile-state/prepopulate-profile-settings)

  ;; keyboard height
  (let [keyboard-height-plugin (keyboard-plugin/KeyboardHeightPlugin)]
    (.onKeyboardHeightChanged
     keyboard-height-plugin
     (fn [height]
       (swap! gs/state assoc :keyboard-height height))))

  (folder-state/all-folders)
  (tag-state/all-tags)

  (let [initial-theme (await (themes/initial-theme))
        token (await (pref/get-string "user-token"))]
    (when (not-empty token)
      (swap! gs/state assoc :user-token token))
    (m/runApp
     (adaptive/AdaptiveTheme
      .light themes/default-light-theme
      .dark themes/default-dark-theme
      .initial initial-theme
      .builder (fn [light dark]
                 (f/widget
                  :context ctx
                  :let [width  (-> m/MediaQuery (.of ctx) .-size .-width)
                        info (merge keyboard-options/keyboard-option
                                    {:keyboard/key-cap-border-radius 6
                                     :keyboard/key-container-color (-> m/Theme (.of ctx) .-colorScheme .-tertiaryContainer)}
                                    {:keyboard/width width})]
                  :bind {:info info :state gs/state}
                  (m/MaterialApp
                   .title "Welcome to Flutter"
                   .theme light
                   .darkTheme dark
                   .debugShowCheckedModeBanner false
                   .home home/screen
                   .routes {
                            ;; "/" (fn ^m/Widget [ctx] home/screen)
                            "/user" (fn ^m/Widget [ctx] user/screen)
                            "/signup" (fn ^m/Widget [ctx] signup/screen)
                            "/login" (fn ^m/Widget [ctx] login/screen)
                            "/tag" (fn ^m/Widget [ctx] tag/screen)
                            })))))))
